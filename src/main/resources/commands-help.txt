Una's NBT Editor

Type names prefixed with a ~ indicate inferred types, such as JSON
strings or UUID long pairs.

Arguments in <angle brackets> represent required arguments.
[Square brackets] indicate optional arguments. Arguments followed by
"..." indicate the argument may be repeated.

A yellow * will be displayed before the prompt if the file has been
modified.

help, h, ?
	No arguments.
	
	Display this help.
	
	No options.

cd
	Arguments: <path>
	
	Change the command context to the given named compound child of the
	current compound, similar to a change-directory command in a
	filesystem. Multiple levels can be traversed by separating compound
	names with a forward slash. With no arguments, jumps to the root of
	the file.
	
	No options.

ls, dir, get
	Arguments: [path]...
	
	Print out the contents of the current command context, or a child
	specified by a path like one that would be given to cd. By default,
	only prints immediate children.
	
	Options:
	-R, --recursive
		Print all descendants recursively, instead of only immediate
		children.
		Implies -s.
	-d, --directory
		Print the compound or list itself, rather than just its
		children.
		Overshadows -R and -s.
	-s, --include-self
		Print the compound or list itself, in addition to its children.
		Implied if the command is invoked as get.
	-r, --raw
		Don't infer types.
	-l, -1, -a, -A
		Ignored. Recognized to avoid mistakes from habit.

rm, del, rmdir, rd
	Arguments: <path>...
	
	Delete the given tag(s). If a tag is a compound and is not empty,
	print an error and do nothing.
	
	Options:
	-r, --recursive
		Also delete nonempty compounds.
	-f, --force
		Ignore errors and attempt to remove every item listed.

mkdir
	Arguments: <path>...
	
	Create new empty compounds at the given paths. Parent compounds will
	be created automatically. Does nothing if a compound already exists
	at the given path. Errors if a non-compound already exists at the
	given path.
	
	-p
		Ignored. Recognized to avoid mistakes from habit.

set, put, create, new, add
	Arguments: <path> [data]...
	
	Set a value at the given path, replacing existing values. Parent
	compounds will be created automatically.
	
	Data may be more than one argument. If it is, the arguments will be
	joined with spaces.
	
	Integer types support hexadecimal (0xN), octal (0N), and of course,
	decimal (N). Integers may additionally be prefixed with a - or a +
	to indicate negative or positive, respectively. The strings "false"
	and "true" will be parsed as 0 and 1 respectively when a numeric
	type is specified.
	
	Floating point types have more complex rules that parse raw hex
	values, exponent notation, and the special values NaN, -Infinity,
	and Infinity. Octal floats are not supported.
	
	Byte arrays support Base64 data. If you want to specify decimal
	numbers, create an empty byte array and set its children using
	index syntax.
	
	Type is required if the value does not already exist.
	
	If there is no root tag yet, the path is instead the name of the
	root tag. Root tag names are seldom used, but support for them is
	included for completeness. You may specify an empty string (i.e. '')
	as the name if you do not want a root tag name.
	Note: Non-compound root tags are poorly supported, and Minecraft
	vanilla itself may not even be able to load them.
	
	Options:
	--type=<type>, --<type>
		Specifies the type of value that will be set. Required if the
		type cannot be inferred, such as when setting an initial value
		in a list or when creating a new tag.
		Valid types: byte, short, int, long, float, double, string,
		byte-array.
		If no data is specified, additional types are: compound, list,
		int-array, long-array.
		Additionally, the false type uuid may be specified, which will
		set two long values, one suffixed with Most, the other suffixed
		with Least, containing the most-significant 64 bits of the UUID
		and the least-significant 64 bits, respectively.
	--shift
		When setting values in a list or array, move all later values
		forward by one, instead of overwriting the existing value
		at the given index. Implied if the command is invoked as add.
		Also, if the path points directly to list or array rather than
		a child thereof, append the tag to the end of the list.
	--no-overwrite
		Throw an error when attempting to overwrite. Implied if the
		command is invoked as create or new.

exit, quit, abort, q
	No arguments.
	
	Exit unbted, without saving changes. You will be asked to confirm
	if there are unsaved changes.
	
	Options:
	-f, --force
		Don't confirm exit when there are unsaved changes. Implied if
		the command is invoked as abort.

save
	Arguments: [file]
	
	Save changes to the given file, or the file that was originally
	loaded. If a file was not loaded, the file argument is required.
	This is true when loading from stdin or when creating a new empty
	file.
	
	Options:
	-J, -j, --roundtrip-json, --json
		Override the save format to be unbted's roundtrippable NBT
		JSON format.
	-N, --nbt
		Override the save format to be the normal NBT format.
	-c=<method>, --compression=<method>
		Override the compression method used. Valid values are None,
		Deflate, and GZip. GZip is the most common. Required on new
		empty files. Otherwise, defaults to the compression that
		was used when the file was loaded.
	--endian=<endianness>
		Write a <endianness>-endian file instead of the default.
		See the program help for more information about why unbted
		supports little-endian NBT. Only valid if the format is
		NBT.
		Valid endiannesses are Big and Little. (case-insensitive)
	--little-endian
		Alias for --endian=little
	--big-endian
		Alias for --endian=big
	-d, --default
		Update the default file, compression method, and endianness
		to those specified.
	-f, --force
		Don't ask questions, just do it.

info
	No arguments.
	
	Print information about the loaded file, such as its
	compression algorithm, root tag name, total size, etc.
	
	Options:
	-s, --si
		Use SI units (1000) instead of binary units (1024)

echo
	Arguments: [anything]...
	
	Print arguments.
	
	Options:
	-e
		Parse escapes. The following escapes are recognized:
			\\ backslash
			\a alert (BEL)
			\b backspace
			\c produce no further output
			\e escape
			\f form feed
			\n new line
			\r carriage return
			\t horizontal tab
			\v vertical tab
			\0NNN byte with octal value NNN (1 to 3 digits)
			\xHH byte with hexadecimal value HH (1 to 2 digits)
			\uHHHH UTF-16 character with hexadecimal value HHHH (1 to 4
				digits)
			\UHHHHHHHH UCS-4 character with hexadecimal value HHHHHHHH
				(1 to 8 digits)
	-s
		Do not separate arguments with spaces.
	-n
		Do not emit a newline.

rem, remark, comment, #, //
	Arguments: [anything]...
	
	Do nothing, ignore all arguments.
	
	No options.

copying
	No arguments.
	
	Display the text of the GNU General Public License version 3.
	
	No options.

warranty
	No arguments.
	
	Display the warranty sections of the GNU General Public License
	version 3.
	
	No options.